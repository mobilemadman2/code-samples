package net.believecollective.ag2010.view {
	import net.believecollective.ag2010.app.ApplicationFacade;	import net.believecollective.ag2010.patterns.proxy.ConfigProxy;	import net.believecollective.ag2010.patterns.proxy.TimelineProxy;	import net.believecollective.frameworks.pureMVC2.view.IViewBase;	import net.believecollective.frameworks.pureMVC2.view.ViewBase;	import org.puremvc.as3.patterns.proxy.Proxy;	/**
	 * @author Dan Mackie (dan@believecollective.net)
	 */
	public class AGBaseView extends ViewBase implements IViewBase {		public static const NAME : String = "AGBaseView";		protected var _oTimeline : TimelineProxy;				public function AGBaseView(arg_s : String = null) {			super(arg_s);			if (ApplicationFacade.IS_FACEBOOK) this.x = ApplicationFacade.APP_WIDTH_DEFAULT - ApplicationFacade.APP_WIDTH_FB;		}		public function fAddData(arg_oConProxy : ConfigProxy, arg_oTLP:TimelineProxy) : void {			_oConfig = arg_oConProxy;			_oTimeline = arg_oTLP;		}		override public function fInit() : void {			//Override in children to create GFX and others on view that is specific		}				override public function fUpdate(arg_o : Object = null, arg_sEvent : String = "") : void {			//Override in children		}				override public function set config(arg_o : Proxy) : void {//			throw new IllegalOperationError("Must override config in view");		}		override public function get config() : Proxy {			return _oConfig as ConfigProxy;		}				public function get timelineProxy() : TimelineProxy {			return _oTimeline;		}	}}
