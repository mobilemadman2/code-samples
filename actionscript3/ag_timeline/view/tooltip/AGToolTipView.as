package net.believecollective.ag2010.view.tooltip {	import net.believecollective.ag2010.model.vo.AGTooltipVO;	import net.believecollective.ag2010.patterns.proxy.ConfigProxy;	import net.believecollective.ag2010.view.AGBaseView;	import net.believecollective.ag2010.view.tooltip.components.AGToolTipViewGFX;	import net.believecollective.frameworks.pureMVC2.app.ApplicationFacadeBase;	import org.puremvc.as3.patterns.proxy.Proxy;	/**	 * @author Dan Mackie	 */	public class AGToolTipView extends AGBaseView {		public static const NAME : String = "AGToolTipView";				public function AGToolTipView() {			super(NAME);		}		override public function fInit() : void {			mcGFX = fCreateTip();		}		private function fCreateTip() : AGToolTipViewGFX {			var t_o : AGToolTipViewGFX = new AGToolTipViewGFX();			addChild(t_o);			return t_o;		}				override public function set config(arg_o : Proxy) : void {			_oConfig = arg_o as ConfigProxy;		}		override public function get config() : Proxy {			return _oConfig as ConfigProxy;		}				override public function fUpdate(arg_o : Object = null, arg_sEvent : String = "") : void {			switch (arg_sEvent) {				case ApplicationFacadeBase.TOOLTIP_TOGGLE_EVENT:					if (arg_o == null) (mcGFX as AGToolTipViewGFX).fToggleToolTip(null);					else {						var t_oTTVO:AGTooltipVO = arg_o as AGTooltipVO;						var t_s : String = _oInterfaceText.fGetInterfaceElementText(t_oTTVO.theID);						if (t_oTTVO.theID == "AGArrowBtn") t_oTTVO.theText = t_s + " '" + t_oTTVO.theText + "'";						else if (t_s != "") t_oTTVO.theText = t_s;						// else, the text is already set						(mcGFX as AGToolTipViewGFX).fToggleToolTip(t_oTTVO);					}					break;			}		}			}}