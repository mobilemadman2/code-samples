package net.believecollective.ag2010.patterns.mediators {	import net.believecollective.ag2010.app.ApplicationFacade;	import net.believecollective.ag2010.view.help.HelpView;	import org.puremvc.as3.interfaces.IMediator;	import org.puremvc.as3.interfaces.INotification;	import flash.events.Event;	import flash.events.MouseEvent;	/**	 * @author Dan Mackie (dan@believecollective.net)	 */	public class HelpViewMediator extends AGBaseMediator implements IMediator {		public static const NAME : String = "HelpViewMediator";				private var _bHelpOn : Boolean;				public function HelpViewMediator(viewComponent : Object = null) {			super(NAME, viewComponent);		}		public function get gfx() : HelpView {			return viewComponent as HelpView;		}		override public function listNotificationInterests() : Array {			var t_a : Array = super.listNotificationInterests();			var t_a2 : Array = t_a.concat( 											ApplicationFacade.NOTE_TOGGLE_HELP);			return 	t_a2;		}				override protected function fViewEvent(event : Event) : void {			switch (event.type) {				case MouseEvent.CLICK:				switch (event.target.name){					case "_mcClose":					_bHelpOn = false;					gfx.fUpdate(_bHelpOn, ApplicationFacade.NOTE_TOGGLE_HELP);					break;				}				break;			}		}		/**		 * Handle all notifications this Mediator is interested in.		 * 		 * @param INotification a notification 		 */		override public function handleNotification( note : INotification ) : void {			super.handleNotification(note);			switch ( note.getName() ) {				case ApplicationFacade.NOTE_TOGGLE_HELP:					if (_bHelpOn == note.getBody()) return;					else _bHelpOn = note.getBody() as Boolean;					gfx.fUpdate(_bHelpOn, note.getName());					break;			}		}				public function get helpOn() : Boolean {			return _bHelpOn;		}	}}