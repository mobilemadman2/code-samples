package net.believecollective.ag2010.patterns.commands {	import net.believecollective.ag2010.app.ApplicationFacade;	import net.believecollective.ag2010.helpers.AGMethodHelper;	import net.believecollective.ag2010.model.vo.timeline.events.AGEventDetailVO;	import net.believecollective.ag2010.patterns.proxy.HistoryProxy;	import org.puremvc.as3.interfaces.ICommand;	import org.puremvc.as3.interfaces.INotification;	import org.puremvc.as3.patterns.command.SimpleCommand;	/**		 * @author Dan Mackie (dan@believecollective.net)	 */	public class ParseXMLDetailCommand extends SimpleCommand implements ICommand {		private var _oAGEventDetailVO : AGEventDetailVO;				override public function execute(notification : INotification) : void {			var t_XML : XML = notification.getBody().xml;			_oAGEventDetailVO = AGMethodHelper.parseEventDetail(t_XML);			if (_oAGEventDetailVO.theID == ApplicationFacade.ACTIVE_ITEM_ID) sendNotification(ApplicationFacade.NOTE_DATA_UPDATE, _oAGEventDetailVO);			(facade.retrieveProxy(HistoryProxy.NAME) as HistoryProxy).historyObject.data.detailVOs[_oAGEventDetailVO.theID] = _oAGEventDetailVO;		}
	}	}